<metal:headcss define-macro="headcss">
    <link rel="stylesheet" type="text/css" href="${request.theme_static_url('semantic.min.css')}" />
    <link rel="stylesheet" type="text/css" href="${request.theme_static_url('devpi-semantic.css')}" />
</metal:headcss>

<metal:headscript define-macro="headscript" use-macro="request.macros['original-headscript']">
    <metal:semantic_js fill-slot="headscript">
        <script src="${request.theme_static_url('semantic.min.js')}"></script>
        <script src="${request.theme_static_url('devpi-semantic.js')}"></script>
    </metal:semantic_js>
</metal:headscript>

<!--metal:head define-macro="head">
    <metal:headcss use-macro="request.macros['headcss']" />
    <metal:headscript use-macro="request.macros['headscript']" />
</metal:head-->


<!--metal:search define-macro="logo">
    <h1><a href="${request.route_url('root')}">devpi</a></h1>
</metal:search-->

<metal:logo define-macro="logo">
<h1>
    <a href="${request.route_url('root')}">
        <img src="${request.theme_static_url('images/python.svg')}" />
        Devpi
    </a>
</h1>
</metal:logo>

<metal:search define-macro="navigation">
<header class="ui borderless main menu fixed">
    <div class="ui container">
        <a href="${request.route_url('root')}" class="header item">
            <img class="logo" src="${request.theme_static_url('images/python.svg')}" />
            Devpi
        </a>
        <form method="get" id="search" action="${request.route_url('search')}" class="ui fluid category search item">
            <div class="ui transparent icon input">
                <input name="query" class="prompt" type="text" autofocus
                    placeholder="Search packages..."
                    tal:attributes="value query|None">
                <i class="search link icon"></i>
            </div>
            <div class="results"></div>
        </form>
    </div>
</header>
<div class="submenu">
    <div class="ui container">
        <div class="ui huge breadcrumb">
            <tal:item tal:repeat="part request.navigation_info.path">
                <i class="right chevron icon divider" tal:condition="not repeat.part.start"></i>
                <a class="section ${python:'active' if repeat.part.end else ''}" href="${part.url}" tal:condition="not repeat.part.start">${part.title}</a>
                <a class="section" href="${part.url}" tal:condition="repeat.part.start"><i class="icon home"></i></a>
            </tal:item>
            <!--a class="section">Registration</a>
            <i class="right chevron icon divider"></i>
            <div class="active section">Personal Information</div-->
        </div>
    </div>
</div>
</metal:search>

<metal:footer define-macro="footer">
    <footer class="ui inverted vertical footer segment">
        <div class="ui container">
            <div class="ui stackable inverted divided equal height stackable grid">
                <div class="five wide column">
                    <h4 class="ui inverted header">About</h4>
                    <div class="ui inverted link list">
                        <a class="item" href="${request.route_url('search_help')}">Search syntax</a>
                        <a class="item" href="http://doc.devpi.net/">Documentation</a>
                    </div>
                </div>
                <div class="five wide column">
                    <h4 class="ui inverted header">Versions</h4>
                    <div class="ui inverted link list"
                        tal:define="version_infos request.registry.get('devpi_version_info')"
                        tal:condition="version_infos">
                        <a tal:repeat="vi version_infos" class="item">${vi[0]}-${vi[1]}</a>
                    </div>
                </div>
                <div class="six wide column">
                    <h4 class="ui inverted header">Devpi</h4>
                    <metal:statusbadge use-macro="request.macros['statusbadge']" />
                </div>
            </div>
        </div>
    </footer>
</metal:footer>

<metal:statusbadge define-macro="statusbadge"
    tal:define="colors {'ok': 'green', 'warn': 'orange', 'fatal': 'red'};
                color colors.get(request.status_info.status)">
    <a class="ui label"
        href="${request.status_info.url}">
        Server status
        <div class="detail">
            <i class="checkmark ${color} icon" tal:condition="request.status_info.status == 'ok'"></i>
            <i class="warning ${color} icon" tal:condition="request.status_info.status == 'warn'"></i>
            <i class="remove ${color} icon" tal:condition="request.status_info.status == 'fatal'"></i>
            ${request.status_info.short_msg}
        </div>
    </a>
</metal:statusbadge>
